# 재승이는 초침만 남아있는 망가진 아날로그 시계를 가지고 놀고 있습니다. 시계는 0초부터 59초까지의 60개의 칸으로 구분되어 있습니다. 초침은 시계방향(0초 → 1초 → 2초 → … → 59초 → 0초) 또는 반시계방향(0초 → 59초 → 58초 → … → 1초 → 0초)으로 돌릴 수 있습니다. 망가진 시계이므로 초침은 재승이가 돌릴때를 제외하면 절대 움직이지 않습니다.
# 재승이는 지금 정확히 A초를 가리키고 있는 초침을 돌려 정확히 B초를 가리키게 하려고 합니다. 물론 어느 방향으로 돌려도 괜찮지만, 재미를 위해 돌릴때 지나는 칸의 수를 최소화하려고 합니다.
# 예를 들어 A가 0이고 B가 50이라면, 시계방향으로 50칸 돌려도 되지만 반시계방향으로 10칸 돌리면 더 적은 칸을 지나고도 같은 목적을 달성할 수 있습니다. A와 B가 주어지면 적어도 몇 칸 돌려야 목적을 달성할 수 있는지 알려주세요.

import sys

A, B = map(int, sys.stdin.readline().split())

if A < B:
    A, B = B, A

case1 = A - B
case2 = 60 - A + B

if case1 <= case2:
    print(case1)
    
else:
    print(case2)